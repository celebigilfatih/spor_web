# Spor Kulübü Web Sitesi - Production Docker Konfigürasyonu
version: '3.8'

services:
  # Web Sunucusu (PHP + Apache) - Production
  web:
    build: 
      context: .
      dockerfile: Dockerfile.prod
    container_name: spor_kulubu_web_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./public/uploads:/var/www/html/public/uploads
      - ./ssl:/etc/ssl/certs
      - ./logs:/var/log/apache2
    environment:
      - ENVIRONMENT=production
      - DB_HOST=database
      - DB_NAME=spor_kulubu
      - DB_USER=spor_user
      - DB_PASS=${DB_PASSWORD}
      - REDIS_HOST=redis
    depends_on:
      - database
      - redis
    networks:
      - spor_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # MySQL Veritabanı - Production
  database:
    image: mysql:8.0
    container_name: spor_kulubu_db_prod
    environment:
      MYSQL_DATABASE: spor_kulubu
      MYSQL_USER: spor_user
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - db_data_prod:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/sample_data.sql:/docker-entrypoint-initdb.d/02-sample_data.sql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/custom.cnf
      - ./backups:/backups
    networks:
      - spor_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Redis - Production
  redis:
    image: redis:7-alpine
    container_name: spor_kulubu_redis_prod
    volumes:
      - redis_data_prod:/data
    networks:
      - spor_network
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Nginx Load Balancer (isteğe bağlı)
  nginx:
    image: nginx:alpine
    container_name: spor_kulubu_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/ssl/certs
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - web
    networks:
      - spor_network
    restart: unless-stopped

  # Backup servisi
  backup:
    image: mysql:8.0
    container_name: spor_kulubu_backup
    environment:
      - DB_HOST=database
      - DB_NAME=spor_kulubu
      - DB_USER=spor_user
      - DB_PASS=${DB_PASSWORD}
    volumes:
      - ./backups:/backups
      - ./docker/backup/backup.sh:/backup.sh
    depends_on:
      - database
    networks:
      - spor_network
    restart: "no"
    entrypoint: ["sh", "/backup.sh"]

# Ağ konfigürasyonu
networks:
  spor_network:
    driver: bridge

# Veri depolama - Production
volumes:
  db_data_prod:
    driver: local
  redis_data_prod:
    driver: local